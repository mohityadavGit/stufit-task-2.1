generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  HOD
}

model School {
  school_id   Int          @id @default(autoincrement())
  school_name String
  students    Student[]    @relation("SchoolStudents")
  admins      AdminLogin[] @relation("SchoolAdmins")
}

model Student {
  student_id     String  @id @default(uuid()) @db.Uuid
  username       String  @unique
  email          String  @unique
  password_hash  String
  full_name      String
  adhar_number   String  @unique
  school_id      Int
  is_active      Boolean @default(true)
  session        String?
  grade          String?
  gender         String?
  admission_date DateTime?
  dob            DateTime?
  parent_id      String?  @db.Uuid

  school         School                @relation("SchoolStudents", fields: [school_id], references: [school_id])
  defects        StudentHealthDefect[] @relation("StudentDefects")
  parent         Parent?               @relation("ParentChildren", fields: [parent_id], references: [parent_id], onDelete: SetNull)
}


model StudentHealthDefect {
  defect_id          Int      @id @default(autoincrement())
  student_id         String   @db.Uuid
  defect_type        String
  affected_body_part String
  defect_details     Json
  severity           String   @default("Unknown")
  date_identified    DateTime @default(now())
  doctor_remarks     String?
  
  student Student             @relation("StudentDefects", fields: [student_id], references: [student_id], onDelete: Cascade)
}

model AdminLogin {
  admin_id      String  @id @default(uuid()) @db.Uuid
  username      String  @unique
  email         String  @unique
  password_hash String
  full_name     String?
  role          Role    @default(ADMIN)
  is_active     Boolean @default(true)
  school_id     Int?

  school School? @relation("SchoolAdmins", fields: [school_id], references: [school_id])
}


model Parent {
  parent_id     String    @id @default(uuid()) @db.Uuid
  full_name     String
  email         String    @unique
  password_hash  String?
  phone_number  String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  children      Student[] @relation("ParentChildren")
}